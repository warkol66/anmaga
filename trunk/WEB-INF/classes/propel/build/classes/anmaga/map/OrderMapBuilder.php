<?php
require_once 'propel/map/MapBuilder.php';
include_once 'creole/CreoleTypes.php';

/**
 * This class adds structure of 'orders_order' table to 'anmaga' DatabaseMap object.
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an 
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive 
 * (i.e. if it's a text column type).
 *
 *  This class was autogenerated by Propel on:
 *
 * [05/14/07 17:23:25]
 *
 * @see BasePeer
 * @see DatabaseMap
 * @package anmaga.map
 */
class OrderMapBuilder implements MapBuilder {

    /**
     * The name of this class
     */
    const CLASS_NAME = "anmaga.map.OrderMapBuilder";
	
    /**
     * The database map.
     */
    private $dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public function isBuilt()
    {
        return ($this->dbMap !== null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public function getDatabaseMap()
    {
        return $this->dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
	 * @return void
     * @throws PropelException
     */
    public function doBuild()
    {
		$this->dbMap = Propel::getDatabaseMap("anmaga");
		
		$tMap = $this->dbMap->addTable("orders_order");
		$tMap->setPhpName("Order");
		
         
		$tMap->setUseIdGenerator(true);
		 
						
		 
		
		// Add columns to map
		$tMap->addPrimaryKey("ID", "Id", "int", CreoleTypes::INTEGER, true);
		$tMap->addColumn("CREATED", "Created", "int", CreoleTypes::TIMESTAMP, true, null);
		$tMap->addForeignKey("USERID", "Userid", "int", CreoleTypes::INTEGER, "usersByAffiliate_user" , "ID", true);
		$tMap->addForeignKey("AFFILIATEID", "Affiliateid", "int", CreoleTypes::INTEGER, "affiliate" , "ID", true);
		$tMap->addForeignKey("BRANCHID", "Branchid", "int", CreoleTypes::INTEGER, "branch" , "ID", false);
		$tMap->addColumn("PROCESSED", "Processed", "int", CreoleTypes::TIMESTAMP, false, null);
		$tMap->addColumn("TOTAL", "Total", "double", CreoleTypes::FLOAT, false, null);
		$tMap->addColumn("STATE", "State", "int", CreoleTypes::INTEGER, false, null);
				
    }
}
