==============================
Revisión 138
------------------------------
Ejecutar SQL para agregar campos a tablas existentes en 

# Agregado active a tabla productos
ALTER TABLE `product` ADD `active` INT NOT NULL DEFAULT '1' COMMENT 'Is product active?';

==============================
Revisión 115
------------------------------

##crearla de nuevo

DROP TABLE IF EXISTS `modules_dependency`;

CREATE TABLE `modules_dependency`
(
	`moduleName` VARCHAR(255)  NOT NULL COMMENT 'Modulo',
	`dependence` VARCHAR(255)  NOT NULL COMMENT 'Modulos de los cuales depende',
	PRIMARY KEY (`moduleName`,`dependence`),
	CONSTRAINT `modules_dependency_FK_1`
		FOREIGN KEY (`moduleName`)
		REFERENCES `modules_module` (`name`)
		ON DELETE CASCADE
)Type=MyISAM COMMENT='Dependencia de modulos ';




## nueva tabla para manejo de seguridad de modulos

CREATE TABLE `security_module`
(
	`module` VARCHAR(100)  NOT NULL COMMENT 'Modulo',
	`access` INTEGER COMMENT 'El acceso a ese action',
	`accessUsersByAffiliate` INTEGER COMMENT 'El acceso a ese action para los usuarios por afiliados',
	PRIMARY KEY (`module`)
)Type=MyISAM COMMENT='Modulos del sistema';


==============================
Revisión 105
------------------------------
#nueva tabla con la etiqueta de los actions
CREATE TABLE `security_actionLabel`
(
	`id` INTEGER  NOT NULL AUTO_INCREMENT COMMENT 'Id label security',
	`action` VARCHAR(100)  NOT NULL COMMENT 'Action pagina',
	`language` VARCHAR(100) COMMENT 'Idioma de la etiqueta',
	`label` VARCHAR(100) COMMENT 'Etiqueta',
	PRIMARY KEY (`id`,`action`),
	INDEX `I_referenced_security_action_FK_1_1` (`action`)
)Type=MyISAM COMMENT='etiquetas de actions de seguridad';


## tabla security_action
ALTER TABLE `security_action` DROP `label`;



## tabla actionLogs_log
ALTER TABLE `actionLogs_log` CHANGE `message` `object` VARCHAR( 100 ) NOT NULL COMMENT 'objeto sobre el cual se realizo la accion';


ALTER TABLE `actionLogs_log` ADD `forward` VARCHAR( 100 ) NOT NULL COMMENT 'tipo de accion de la etiqueta';


## tabla modules_module
ALTER TABLE `modules_module` DROP `label` ,
DROP `description` ;


## nueva tabla con la etiqueta de los modulos

CREATE TABLE `modules_label`
(
	`id` INTEGER  NOT NULL AUTO_INCREMENT COMMENT 'Id module label',
	`name` VARCHAR(255)  NOT NULL COMMENT 'nombre del modulo',
	`label` VARCHAR(255) COMMENT 'Etiqueta',
	`description` VARCHAR(255) COMMENT 'Descripcion del modulo',
	`language` VARCHAR(100) COMMENT 'idioma de la etiqueta',
	PRIMARY KEY (`id`,`name`),
	INDEX `modules_label_FI_1` (`name`),
	CONSTRAINT `modules_label_FK_1`
		FOREIGN KEY (`name`)
		REFERENCES `modules_module` (`name`)
		ON DELETE CASCADE
)Type=MyISAM COMMENT='Etiquetas de modulos ';



==============================
Revisión 99
------------------------------
# se agrega un campo a security_action

ALTER TABLE `security_action` ADD `label` VARCHAR( 255 ) NULL ;




==============================
Revisión 97
------------------------------


# Nueva tabla que reemplaza a log_actionLog
CREATE TABLE `actionLogs_log`
(
	`id` INTEGER  NOT NULL AUTO_INCREMENT COMMENT 'Id log',
	`userId` INTEGER  NOT NULL COMMENT 'Id del usuario',
	`affiliateId` INTEGER  NOT NULL COMMENT 'Id del afiliado',
	`datetime` DATETIME  NOT NULL COMMENT 'Fecha en que se logueo el dato',
	`action` VARCHAR(100)  NOT NULL COMMENT 'action en que se logueo el dato',
	`message` VARCHAR(100)  NOT NULL COMMENT 'mensaje del log',
	PRIMARY KEY (`id`),
	INDEX `actionLogs_log_FI_1` (`userId`),
	CONSTRAINT `actionLogs_log_FK_1`
		FOREIGN KEY (`userId`)
		REFERENCES `users_user` (`id`),
	INDEX `actionLogs_log_FI_2` (`action`),
	CONSTRAINT `actionLogs_log_FK_2`
		FOREIGN KEY (`action`)
		REFERENCES `security_action` (`action`)
)Type=MyISAM COMMENT='logs del sistema';


# Nueva tabla
CREATE TABLE `actionLogs_label`
(
	`id` INTEGER  NOT NULL AUTO_INCREMENT COMMENT 'Id log',
	`action` VARCHAR(100)  NOT NULL COMMENT 'action en que se loguea el dato',
	`label` VARCHAR(100)  NOT NULL COMMENT 'mensaje del log',
	`language` VARCHAR(100) COMMENT 'idioma de la etiqueta',
	`forward` VARCHAR(100) COMMENT 'tipo de accion de la etiqueta',
	PRIMARY KEY (`id`)
)Type=MyISAM COMMENT='Etiquetas de logueo';



==============================
Revisión 86
------------------------------
Ejecutar SQL para agregar campos a tablas existentes en 

# Agregado último login a users_user
ALTER TABLE `users_user` ADD `lastLogin` DATETIME COMMENT 'Fecha del ultimo login del usuario';

# Agregado mail a users_userInfo
ALTER TABLE `users_userInfo` ADD `mailAddress` VARCHAR( 255 ) NOT NULL COMMENT 'Email';

# Agregado último login a users_user
ALTER TABLE `usersByAffiliate_user` ADD `lastLogin` DATETIME COMMENT 'Fecha del ultimo login del usuario';

# Agregado mail a users_userInfo
ALTER TABLE `usersByAffiliate_userInfo` ADD `mailAddress` VARCHAR( 255 ) NOT NULL COMMENT 'Email';

------------------------------
