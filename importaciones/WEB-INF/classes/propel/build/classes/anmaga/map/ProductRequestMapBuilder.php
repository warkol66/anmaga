<?php

require_once 'propel/map/MapBuilder.php';
include_once 'creole/CreoleTypes.php';


/**
 * This class adds structure of 'productRequest' table to 'anmaga' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel on:
 *
 * 12/05/07 13:19:20
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    anmaga.map
 */
class ProductRequestMapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'anmaga.map.ProductRequestMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap('anmaga');

		$tMap = $this->dbMap->addTable('productRequest');
		$tMap->setPhpName('ProductRequest');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'int', CreoleTypes::INTEGER, true, null);

		$tMap->addForeignKey('REQUESTID', 'Requestid', 'int', CreoleTypes::INTEGER, 'request', 'ID', true, null);

		$tMap->addForeignKey('PRODUCTID', 'Productid', 'int', CreoleTypes::INTEGER, 'product', 'ID', true, null);

		$tMap->addForeignKey('SUPPLIERID', 'Supplierid', 'int', CreoleTypes::INTEGER, 'supplier', 'ID', false, null);

		$tMap->addColumn('QUANTITY', 'Quantity', 'int', CreoleTypes::INTEGER, false, null);

		$tMap->addColumn('PRICESUPPLIER', 'Pricesupplier', 'double', CreoleTypes::FLOAT, false, null);

		$tMap->addColumn('TIMESTAMPPRICESUPPLIER', 'Timestamppricesupplier', 'int', CreoleTypes::TIMESTAMP, false, null);

		$tMap->addColumn('PRICECLIENT', 'Priceclient', 'double', CreoleTypes::FLOAT, false, null);

		$tMap->addColumn('TIMESTAMPPRICECLIENT', 'Timestamppriceclient', 'int', CreoleTypes::TIMESTAMP, false, null);

		$tMap->addForeignKey('ICOTERMID', 'Icotermid', 'int', CreoleTypes::INTEGER, 'icoterm', 'ID', false, null);

		$tMap->addForeignKey('PORTID', 'Portid', 'int', CreoleTypes::INTEGER, 'port', 'ID', false, null);

		$tMap->addColumn('STATUS', 'Status', 'int', CreoleTypes::INTEGER, true, null);

		$tMap->addColumn('TIMESTAMPSTATUS', 'Timestampstatus', 'int', CreoleTypes::TIMESTAMP, false, null);

	} // doBuild()

} // ProductRequestMapBuilder
